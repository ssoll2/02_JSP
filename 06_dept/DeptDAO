package com.dept.model;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class DeptDAO {

	/* 암기 또는 복붙으로 연습... 각자의 노력... */
	
	// DB와 연동하는 객체
	Connection con = null;
	
	// DB에 SQL문을 전송하는 객체
	PreparedStatement pstmt = null;
	
	// SQL문을 실행한 후에 결과값을 가지고 있는 객체
	ResultSet rs = null;
	
	// 쿼리문을 저장할 객체
	String sql = null;
	
	public DeptDAO() {
		String driver = "com.mysql.cj.jdbc.Driver";
		String url = "jdbc:mysql://localhost:3333/hms";
		String user = "root";
		String password = "1234";
		
		try {
			// 1단계 : mysql드라이버를 메모리로 로딩 작업.
			Class.forName(driver);
			
			// 2단계 : mysql 데이터베이스와 연결 작업 진행
			con = DriverManager.getConnection(url, user, password);
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		
	}// 기본 생성자 end
	
	// DAO 코딩 구역
	
	public List<DeptDTO> deptList() {
		
		List<DeptDTO> list = new ArrayList<DeptDTO>();
		
		
		try {
			sql = "select *from dept order by deptno";
			
			pstmt = con.prepareStatement(sql);
			
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				DeptDTO dto = new DeptDTO();
				
				dto.setDeptno(Integer.parseInt(rs.getString("deptno")));
				dto.setDname(rs.getString("dname"));
				dto.setLoc(rs.getString("loc"));
				
				list.add(dto);
			}
			rs.close();
			pstmt.close();
			con.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	
		return list;
		
	}//deptList() end;
	
	// 부서 테이블에 부서를 등록하는 메서드
	public int InsertDept(DeptDTO dto) {
		
		int result = 0;
		
		
		try {
			sql = "insert into dept values(?,?,?)";
			pstmt = con.prepareStatement(sql);
			
			pstmt.setInt(1, dto.getDeptno());
			pstmt.setString(2, dto.getDname());
			pstmt.setString(3, dto.getLoc());
			
			result = pstmt.executeUpdate();
			
			pstmt.close();
			con.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return result;
		
	}// insertDept(dto) end
	
	// 부서번호에 해당하는 부서 삭제 메서드

	public int deleteDeptno(int deptno) {
		
		int result = 0;
		
		
		
		try {
			sql = "delete from dept where deptno = ?";
		
			pstmt = con.prepareStatement(sql);
			
			pstmt.setInt(1, deptno);
			
			result = pstmt.executeUpdate();
			
			pstmt.close();
			con.close();
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
		return result;
		
	}// delete 메서드 end
    
	// 부서번호에 해당하는 부서의 정보를 가져오는 메서드
	public DeptDTO getDept(int deptno) {
		
		DeptDTO dto = null;
		
		try {
			sql = "select * from dept where deptno= ?";
			
			pstmt = con.prepareStatement(sql);
			
			pstmt.setInt(1, deptno);
			
			rs = pstmt.executeQuery();
			
			if(rs.next()) {
				dto = new DeptDTO();
				
				dto.setDeptno(rs.getInt("deptno"));
				dto.setDname(rs.getString("dname"));
				dto.setLoc(rs.getString("loc"));

			}
			
			rs.close();
			pstmt.close();
			con.close();
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
		return dto;
		
	}// getDept(int deptno) end
	
	// 업데이트 메서드
	public int updateDept(DeptDTO dto) {
		
		int result = 0;
		
		
		try {
			sql = "update dept set dname = ?, loc = ? where deptno = ?";
			
			pstmt = con.prepareStatement(sql);
			
			pstmt.setString(1,dto.getDname());
			pstmt.setString(2,dto.getLoc());
			pstmt.setInt(3, dto.getDeptno());
			
			result = pstmt.executeUpdate();
			
			pstmt.close();
			con.close();
			
		} catch (SQLException e) {
		
			e.printStackTrace();
		}
		
		return result;
	}
	
	
} // class end

